<?php

namespace App\Http\Controllers\{{folderName}};
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\{{folderName}}\{{modelName}}Request;
use App\Services\{{folderName}}\{{modelName}}Service;

class {{modelName}}Controller extends Controller
{

    protected ${{modelNameSingularLowerCase}}_service;
    public function __construct({{modelName}}Service ${{modelNameSingularLowerCase}}_service){
        $this->{{modelNameSingularLowerCase}}_service = ${{modelNameSingularLowerCase}}_service;        
    } 
    /**
     * @OA\Get(
     *     path="/api/{{folderNameLowerCase}}/{{modelNamePluralLowerCase}}",
     *    tags={"{{modelNamePluralLowerCase}}"},
     *     summary="Retorna uma lista de {{modelNamePluralLowerCase}}",     
     *     description="Index",
     *  @OA\Response(response=200, description="Retorna uma lista de {{modelNamePluralLowerCase}}",
     *          ),
     *  security={{ "bearerAuth": {} }}
     * )
     */
    public function index(Request $request)
    {    
         return $this->{{modelNameSingularLowerCase}}_service->index($request);              
    }
        /**
        * @OA\Post(
        * path="/api/{{folderNameLowerCase}}/{{modelNamePluralLowerCase}}",    
        * tags={"{{modelNamePluralLowerCase}}"},           
        * summary="Cadastra {{modelNamePluralLowerCase}}",
        * description="{{modelNamePluralLowerCase}} cadastro",
        *     @OA\RequestBody(        
        *        @OA\JsonContent(        
        *          {{properties}}
        *        ),
        *     ),
        *  security={{ "bearerAuth": {} }},
        *      @OA\Response(
        *          response=201,
        *          description="Cadastrado com sucesso",
        *          @OA\JsonContent()
        *       ),
        * )
        */
    public function store({{modelName}}Request $request)
    {        
        return $this->{{modelNameSingularLowerCase}}_service->store($request);   
    }

    /**
     * @OA\Get(
     *     path="/api/{{folderNameLowerCase}}/{{modelNamePluralLowerCase}}/{id}",
     *     tags={"{{modelNamePluralLowerCase}}"},   
     *     summary="Consulta {{modelNamePluralLowerCase}}",
     *     description="Index",
     *     @OA\Parameter(name="id", in="path", description="Id de {{modelNamePluralLowerCase}}", required=true,
     *         @OA\Schema(type="integer")
     *     ),* 
     *  @OA\Response(response=200, description="Retorna uma lista de {{modelNamePluralLowerCase}}"),
     *  security={{ "bearerAuth": {} }}
     * )
     */
    public function show($id)
    {
        return $this->{{modelNameSingularLowerCase}}_service->show($id);       
    }
  /**
     * @OA\Put(
     *     path="/api/{{folderNameLowerCase}}/{{modelNamePluralLowerCase}}/{id}",     
     *     tags={"{{modelNamePluralLowerCase}}"},   
     *     summary="Atualiza {{modelNamePluralLowerCase}}",
     *     description="Update {{modelNamePluralLowerCase}} in DB",
     *     @OA\Parameter(name="id", in="path", description="Id de {{modelNamePluralLowerCase}}", required=true,
     *         @OA\Schema(type="integer")
     *     ),
     *     @OA\RequestBody(     
     *        @OA\JsonContent(        
     *          {{properties}}
     *        ),
     *     ),
     *  security={{ "bearerAuth": {} }},* 
     *     @OA\Response(
     *          response=200, description="Atualizado com sucesso",
     *          @OA\JsonContent(
     *             @OA\Property(property="status_code", type="integer", example="200"),
     *             @OA\Property(property="data",type="object")
     *          )
     *       )
     *  )
     */
    public function update({{modelName}}Request $request, $id)
    { 
        return $this->{{modelNameSingularLowerCase}}_service->update($request,$id);           
    }
    /**
     * @OA\Delete(
     *     path="/api/{{folderNameLowerCase}}/{{modelNamePluralLowerCase}}/{id}",
     *     tags={"{{modelNamePluralLowerCase}}"},   
     *     summary="Exclui {{modelNamePluralLowerCase}}",
     *     description="Destroy",
     *     @OA\Parameter(name="id", in="path", description="Id de {{modelNamePluralLowerCase}}", required=true,
     *         @OA\Schema(type="integer")
     *     ),* 
     *  @OA\Response(response=200, description="ExcluÃ­do com sucesso"),
     *  security={{ "bearerAuth": {} }}
     * )
     */
    public function destroy($id)
    {
        return $this->{{modelNameSingularLowerCase}}_service->destroy($id);              
    }    
    
}
